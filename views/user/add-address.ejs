<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>4Watch Store - Add Address</title>
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.16/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css" />
  <style>
    .golden-gradient {
      background: linear-gradient(135deg, #bf953f, #fcf6ba, #b38728, #fbf5b7);
    }
  </style>
</head>

<body class="bg-gray-50">
  <%- include('../layouts/header.ejs', { fullName: fullName }) %>

  <main class="container mx-auto px-4 py-8 max-w-2xl">
    <div class="bg-white rounded-xl shadow-lg p-6 border border-amber-200">
      <div class="mb-6 text-center">
        <h1 class="text-2xl font-bold text-gray-800">Add New Address</h1>
      </div>

      <form id="addressForm" action="/add-address" method="POST" onsubmit="return validateForm(event)">
        <div class="space-y-4">
          <div>
            <label class="block text-gray-700 text-sm font-bold mb-2" for="address">Address</label>
            <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-amber-400" 
                   id="address" name="address">
            <div id="addressError" class="text-red-500 text-sm mt-1 hidden"></div>
          </div>

          <div>
            <label class="block text-gray-700 text-sm font-bold mb-2" for="addressline2">Address Line 2</label>
            <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-amber-400" 
                   id="addressline2" name="addressline2">
            <div id="address2Error" class="text-red-500 text-sm mt-1 hidden"></div>
          </div>

          <div class="grid grid-cols-2 gap-4">
            <div>
              <label class="block text-gray-700 text-sm font-bold mb-2" for="city">City</label>
              <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-amber-400" 
                     id="city" name="city">
              <div id="cityError" class="text-red-500 text-sm mt-1 hidden"></div>
            </div>

            <div>
              <label class="block text-gray-700 text-sm font-bold mb-2" for="state">State</label>
              <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-amber-400" 
                     id="state" name="state">
              <div id="stateError" class="text-red-500 text-sm mt-1 hidden"></div>
            </div>
          </div>

          <div>
            <label class="block text-gray-700 text-sm font-bold mb-2" for="pincode">Pincode</label>
            <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-amber-400" 
                   id="pincode" name="pincode">
            <div id="pincodeError" class="text-red-500 text-sm mt-1 hidden"></div>
          </div>

          <div class="flex justify-between items-center pt-4">
            <a href="/profile" class="text-amber-600 hover:text-amber-700">
              <i class="fas fa-arrow-left mr-2"></i>Back to Profile
            </a>
            <button type="submit" class="bg-amber-500 text-white px-6 py-2 rounded-md hover:bg-amber-600 transition-colors">
              Save Address
            </button>
          </div>
        </div>
      </form>
    </div>
  </main>
  

  <script>
    function validateForm(event) {
      event.preventDefault();

      const address = document.getElementById("address");
      const addressLine2 = document.getElementById("addressline2");
      const city = document.getElementById("city");
      const state = document.getElementById("state");
      const pincode = document.getElementById("pincode");
      const addressError = document.getElementById("addressError");
      const address2Error = document.getElementById("address2Error");
      const cityError = document.getElementById("cityError");
      const stateError = document.getElementById("stateError");
      const pincodeError = document.getElementById("pincodeError");

      let isValid = true;

      // Validate address field
      const addressRegex = /^[a-zA-Z0-9\s,.'-]*$/;
      if (address.value.trim() === "") {
        address.classList.add("is-invalid");
        addressError.style.display = "block";
        addressError.textContent = "Please enter your address.";
        isValid = false;
      } else if (!addressRegex.test(address.value.trim())) {
        address.classList.add("is-invalid");
        addressError.style.display = "block";
        addressError.textContent = "Please enter a valid address.";
        isValid = false;
      } else {
        address.classList.remove("is-invalid");
        addressError.style.display = "none";
      }

      // Validate addressline2 field
      const addressLine2Regex = /^[a-zA-Z0-9\s,.'-]*$/;
      if (addressLine2.value.trim() === "") {
        addressLine2.classList.add("is-invalid");
        address2Error.style.display = "block";
        address2Error.textContent = "Please enter your address line 2.";
        isValid = false;
      } else if (!addressLine2Regex.test(addressLine2.value.trim())) {
        addressLine2.classList.add("is-invalid");
        address2Error.style.display = "block";
        address2Error.textContent = "Please enter a valid address line 2.";
        isValid = false;
      } else {
        addressLine2.classList.remove("is-invalid");
        address2Error.style.display = "none";
      }

      // Validate city field
      const cityRegex = /^[a-zA-Z\s]*$/;
      if (city.value.trim() === "") {
        city.classList.add("is-invalid");
        cityError.style.display = "block";
        cityError.textContent = "Please enter your city.";
        isValid = false;
      } else if (!cityRegex.test(city.value.trim())) {
        city.classList.add("is-invalid");
        cityError.style.display = "block";
        cityError.textContent = "Please enter a valid city.";
        isValid = false;
      } else {
        city.classList.remove("is-invalid");
        cityError.style.display = "none";
      }

      // Validate state field
      const stateRegex = /^[a-zA-Z\s]*$/;
      if (state.value.trim() === "") {
        state.classList.add("is-invalid");
        stateError.style.display = "block";
        stateError.textContent = "Please enter your state.";
        isValid = false;
      } else if (!stateRegex.test(state.value.trim())) {
        state.classList.add("is-invalid");
        stateError.style.display = "block";
        stateError.textContent = "Please enter a valid state.";
        isValid = false;
      } else {
        state.classList.remove("is-invalid");
        stateError.style.display = "none";
      }

      // Validate pincode field
      const pincodeRegex = /^[1-9][0-9]{5}$/;
      if (pincode.value.trim() === "") {
        pincode.classList.add("is-invalid");
        pincodeError.style.display = "block";
        pincodeError.textContent = "Please enter your pincode.";
        isValid = false;
      } else if (!pincodeRegex.test(pincode.value.trim())) {
        pincode.classList.add("is-invalid");
        pincodeError.style.display = "block";
        pincodeError.textContent = "Please enter a valid 6-digit pincode.";
        isValid = false;
      } else {
        pincode.classList.remove("is-invalid");
        pincodeError.style.display = "none";
      }

      if (isValid) {
        document.getElementById("addressForm").submit();
      }
    }
  </script>
</body>

</html>