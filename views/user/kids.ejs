<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Kid's Collection</title>
  <link rel="stylesheet" href="/css/style.css" />
  <!-- Bootstrap CSS -->
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
  <!-- Font Awesome CSS -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.16/dist/tailwind.min.css" rel="stylesheet">

  <style>
    /* Filter Sidebar Styles */
    .filter-sidebar {
      background-color: #f8f9fa;
      /* Set background color */
      padding: 20px;
      /* Add padding */
      border-radius: 10px;
      /* Add border radius */
      border: 1px solid #bca374;
      /* Add border */
      margin-bottom: 20px;
      /* Add margin bottom */
    }

    .filter-title {
      color: #333;
      /* Set title color */
      font-size: 20px;
      /* Set title font size */
      font-weight: bold;
      /* Set title font weight */
      margin-bottom: 10px;
      /* Add margin bottom */
    }

    .filter-options {
      list-style: none;
      /* Remove default list style */
      padding: 0;
      /* Remove default padding */
    }

    .filter-options li {
      margin-bottom: 15px;
      /* Add margin bottom */
    }

    /* Styling for dropdowns and input fields */
    select,
    input[type="range"] {
      width: 10%;
      /* Set width to 100% */
      padding: 10px;
      /* Add padding */
      border: 1px solid #bca374;
      /* Add border */
      border-radius: 5px;
      /* Add border radius */
      background-color: #fff;
      /* Set background color */
      color: #333;
      /* Set text color */
      font-size: 16px;
      /* Set font size */
    }

    /* Styling for submit button */
    .filter-submit-btn {
      background-color: #bca374;
      /* Set background color */
      color: #fff;
      /* Set text color */
      padding: 10px 20px;
      /* Add padding */
      border: none;
      /* Remove border */
      border-radius: 5px;
      /* Add border radius */
      cursor: pointer;
      /* Add cursor pointer */
      font-size: 16px;
      /* Set font size */
    }

    /* Hover effect for submit button */
    .filter-submit-btn:hover {
      background-color: #a38f5f;
      /* Change background color on hover */
    }
  </style>

</head>

<body>
  <!-- Navbar -->
  <%- include('../layouts/header.ejs') %>

  <body>
    <form class="form-inline ml-2 mt-5 mb-5" action="/kidsfilter" method="GET">
      <label for="price">Price Range:</label>
      <select class="mr-2" name="price" id="price" aria-placeholder="">
        <option value="">Any Price</option> <!-- Empty option -->
        <option value="0-500">0 - 500 Rs</option>
        <option value="500-1000">500 - 1000 Rs</option>
        <option value="1000-2000">1000 - 2000 Rs</option>
        <option value="2000-4000">2000 - 4000 Rs</option>
        <option value="4000-15000">4000 - 15000</option>
        <!-- Add more options as needed -->
      </select>
      <!-- Add sorting dropdown -->
      <label for="sort">Sort By:</label>
      <select class="mr-2" name="sort" id="sort">
        <option value="">Any Sort</option>
        <option value="priceAsc">Price: Low to High</option>
        <option value="priceDesc">Price: High to Low</option>
        <option value="ratings">Average Ratings</option>
        <option value="featured">Featured</option>
        <option value="newArrivals">New Arrivals</option>
        <option value="aToZ">A-Z</option>
        <option value="zToA">Z-A</option>
      </select>
      <button class="filter-submit-btn" type="submit">Apply Filter</button>
    </form>

    <!-- Item Cards -->
    <div>
      <div class="container">
        <div class="row justify-content-center">
          <div class="col-lg-6 text-center">
            <div class="section-title">
              <h1>Kid's Collection</h1>
            </div>
          </div>
        </div>

        <div class="row">
          <% for(let i=0 ; i< products.length ;i++) { %>
          <div class="col-md-3 mb-3">
            <div class="card " data-stock="<%= products[i].stock %>">
              <!-- Add-to-Cart and Wishlist Icons -->
              <div class="icons-container">
                <form action="/add-to-cart/<%= products[i]._id %>" method="POST" class="add-to-cart-form" style="border-color: none;">
                  <button type="submit" class="add-to-cart icon" style="border: none;background-color: transparent;">
                    <i class="fas fa-shopping-cart"></i>
                  </button>
                </form>
                <form action="/add-to-wishlist/<%= products[i]._id %>" method="POST" class="wishlist-form" style="border-color: none;">
                  <button type="submit" class="wishlist-icon" style="border: none;background-color: transparent;">
                    <i class="fas fa-heart"></i>
                  </button>
                </form>
              </div>
              <!-- Wrap product card with anchor tag -->
              <a href="/product/<%= products[i]._id %>">
                <img class="img-fluid" src="<%= products[i].image[0].path %>" alt="product image" />
                <div class="product-details">
                  <h5><%= products[i].product %></h5>
                  <h6><%= products[i].description %></h6>
                  <div class="price">
                    <% if (products[i].offerPrice && products[i].offerPrice <
                    products[i].price) { %>
                    <h6 class="original-price" style="color: red">
                      <s><%= products[i].price %></s>
                    </h6>
                    <h6 class="offer-price" style="color: green">
                      offer price: <%= products[i].offerPrice%>
                    </h6>
                    <% } else { %>
                    <h6><%= products[i].price %></h6>
                    <% } %>
                  </div>
                  <span class="stock-status"></span>
                </div>
              </a>
            </div>
          </div>
          <% } %>
        </div>
      </div>
    </div>

    <%- include('../layouts/footer.ejs') %>

    <!-- Bootstrap JS and jQuery -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="/js/main.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        const productCards = document.querySelectorAll(".card"); // Select all product cards

        productCards.forEach((card) => {
          const stockStatus = card.querySelector(".stock-status"); // Find the stock status element within the card
          const addToCartButton = card.querySelector(".add-to-cart"); // Find the add-to-cart button within the card

          const stock = parseInt(card.dataset.stock); // Get the stock quantity from the data attribute
          console.log(stock);
          if (stock <= 0) {
            stockStatus.textContent = "Out of Stock";
            stockStatus.style.color = "red";
            addToCartButton.disabled = true;
            addToCartButton.style.display = "none";
          } else if (stock < 5) {
            stockStatus.textContent = `Limited Stock (${stock} left)`;
            stockStatus.style.color = "orange";
          } else {
            stockStatus.textContent = "In Stock";
            stockStatus.style.color = "green";
          }
        });
      });

      document.addEventListener("DOMContentLoaded", function() {
        const productCards = document.querySelectorAll(".card-new"); // Select all product cards

        productCards.forEach((card) => {
          const stockStatus = card.querySelector(".stock-status-latest"); // Find the stock status element within the card
          const addToCartButton = card.querySelector(".add-to-cart"); // Find the add-to-cart button within the card

          const stock = parseInt(card.dataset.stock); // Get the stock quantity from the data attribute
          console.log(stock);
          if (stock <= 0) {
            stockStatus.textContent = "Out of Stock";
            stockStatus.style.color = "red";
            addToCartButton.disabled = true;
            addToCartButton.style.display = "none";
          } else if (stock < 5) {
            stockStatus.textContent = `Limited Stock (${stock} left)`;
            stockStatus.style.color = "orange";
          } else {
            stockStatus.textContent = "In Stock";
            stockStatus.style.color = "green";
          }
        });
      });
    </script>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const mobileMenuButton = document.querySelector('.mobile-menu-button');
        const mobileMenu = document.querySelector('.mobile-menu');
        let isMenuOpen = false;

        // Toggle mobile menu
        mobileMenuButton.addEventListener('click', () => {
          isMenuOpen = !isMenuOpen;
          if (isMenuOpen) {
            mobileMenu.classList.remove('hidden');
            // Add slide-down animation
            mobileMenu.style.maxHeight = mobileMenu.scrollHeight + 'px';
          } else {
            // Add slide-up animation
            mobileMenu.style.maxHeight = '0';
            setTimeout(() => {
              mobileMenu.classList.add('hidden');
            }, 300);
          }
        });

        // Smooth scroll for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
          anchor.addEventListener('click', function(e) {
            e.preventDefault();
            document.querySelector(this.getAttribute('href')).scrollIntoView({
              behavior: 'smooth'
            });
          });
        });

        // Add shadow to header on scroll
        window.addEventListener('scroll', () => {
          const header = document.querySelector('nav');
          if (window.scrollY > 0) {
            header.classList.add('shadow-md');
          } else {
            header.classList.remove('shadow-md');
          }
        });
      });

      document.addEventListener('DOMContentLoaded', function() {
        // Update stock status badges
        document.querySelectorAll('.card').forEach(card => {
          const stock = parseInt(card.dataset.stock);
          const statusSpan = card.querySelector('.stock-status');

          if (stock === 0) {
            statusSpan.textContent = 'Out of Stock';
            statusSpan.classList.add('out-of-stock');
            card.style.opacity = '0.7';
          } else if (stock <= 5) {
            statusSpan.textContent = 'Low Stock';
            statusSpan.classList.add('low-stock');
          } else {
            statusSpan.textContent = 'In Stock';
            statusSpan.classList.add('in-stock');
          }
        });

        // Smooth scroll for new arrivals container
        const container = document.querySelector('.new-arrivals-container');
        let isDown = false;
        let startX;
        let scrollLeft;

        container.addEventListener('mousedown', (e) => {
          isDown = true;
          container.style.cursor = 'grabbing';
          startX = e.pageX - container.offsetLeft;
          scrollLeft = container.scrollLeft;
        });

        container.addEventListener('mouseleave', () => {
          isDown = false;
          container.style.cursor = 'default';
        });

        container.addEventListener('mouseup', () => {
          isDown = false;
          container.style.cursor = 'default';
        });

        container.addEventListener('mousemove', (e) => {
          if (!isDown) return;
          e.preventDefault();
          const x = e.pageX - container.offsetLeft;
          const walk = (x - startX) * 2;
          container.scrollLeft = scrollLeft - walk;
        });
      });
    </script>
  </body>

</html>