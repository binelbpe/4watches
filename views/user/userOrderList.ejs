<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Orders - 4Watch Store</title>
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.16/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css" />
  <style>
    .order-card {
      transition: all 0.3s ease;
    }
    .order-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .price-breakdown {
      font-size: 0.9rem;
      color: #666;
    }
    .status-badge {
      padding: 0.25rem 0.75rem;
      border-radius: 9999px;
      font-size: 0.875rem;
      font-weight: 500;
    }
    .status-pending { background: #FEF3C7; color: #92400E; }
    .status-completed { background: #D1FAE5; color: #065F46; }
    .status-cancelled { background: #FEE2E2; color: #991B1B; }
    .status-returned { background: #E0E7FF; color: #3730A3; }
    .status-paymentpending { 
      background: #FEF3C7; 
      color: #92400E; 
      border: 1px solid #F59E0B;
    }
  </style>
</head>

<body class="bg-gray-50">
  <%- include('../layouts/header.ejs', { fullName: fullName }) %>

  <main class="container mx-auto px-4 py-8">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">My Orders</h1>

    <% if (orders.length > 0) { %>
      <div class="space-y-6">
        <% orders.forEach(order => { %>
          <div class="order-card bg-white rounded-xl shadow-lg p-6 border border-gray-200">
            <!-- Order Header -->
            <div class="flex justify-between items-start mb-4">
              <div>
                <p class="text-sm text-gray-500">Order ID: #<%= order._id %></p>
                <p class="text-sm text-gray-500">
                  Ordered on: <%= new Date(order.createdAt).toLocaleDateString() %>
                </p>
              </div>
              <div class="status-badge status-<%= order.status.toLowerCase() %>">
                <%= order.status === 'completed' ? 'Delivered' : 
                    order.status === 'paymentpending' ? 'Payment Failed' :
                    order.status %>
              </div>
            </div>

            <!-- Products -->
            <div class="space-y-4 mb-4">
              <% order.products.forEach(product => { %>
                <div class="flex items-center justify-between border-b pb-4">
                  <div class="flex items-center space-x-4">
                    <img src="<%= product.product?.image?.[0]?.path || '/images/placeholder.jpg' %>" 
                         alt="<%= product.product?.product || 'Product' %>"
                         class="w-16 h-16 object-cover rounded">
                    <div>
                      <p class="font-medium"><%= product.product?.product || 'Product Unavailable' %></p>
                      <p class="text-sm text-gray-600">Quantity: <%= product.quantity %></p>
                      <p class="text-sm text-gray-600">
                        Status: <%= product.status === 'completed' ? 'Delivered' : product.status %>
                      </p>
                    </div>
                  </div>
                  <div class="text-right">
                    <p class="font-medium">₹<%= (product.product?.price * product.quantity).toFixed(2) %></p>
                    
                    <!-- Product Actions -->
                    <% if (product.status === 'pending') { %>
                      <button onclick="cancelProduct('<%= order._id %>', '<%= product.product._id %>')"
                              class="text-red-600 text-sm hover:text-red-800">
                        Cancel
                      </button>
                    <% } else if (product.status === 'completed') { %>
                      <button onclick="returnProduct('<%= order._id %>', '<%= product.product._id %>')"
                              class="text-blue-600 text-sm hover:text-blue-800">
                        Return
                      </button>
                    <% } %>
                  </div>
                </div>
              <% }); %>
            </div>

            <!-- Price Breakdown -->
            <div class="bg-gray-50 p-4 rounded-lg">
              <h3 class="font-medium mb-2">Price Details</h3>
              <div class="price-breakdown space-y-2">
                <div class="flex justify-between">
                  <span>Subtotal:</span>
                  <span>₹<%= order.subtotal.toFixed(2) %></span>
                </div>
                <div class="flex justify-between">
                  <span>Tax (5%):</span>
                  <span>₹<%= order.tax.toFixed(2) %></span>
                </div>
                <div class="flex justify-between">
                  <span>Shipping:</span>
                  <span>₹<%= order.shipping.toFixed(2) %></span>
                </div>
                <% if (order.couponDiscount > 0) { %>
                  <div class="flex justify-between text-green-600">
                    <span>Coupon Discount:</span>
                    <span>-₹<%= order.couponDiscount.toFixed(2) %></span>
                  </div>
                <% } %>
                <% if (order.walletAmountUsed > 0) { %>
                  <div class="flex justify-between text-blue-600">
                    <span>Wallet Amount Used:</span>
                    <span>-₹<%= order.walletAmountUsed.toFixed(2) %></span>
                  </div>
                <% } %>
                <div class="border-t pt-2 font-medium">
                  <div class="flex justify-between">
                    <span>Total Amount:</span>
                    <span>₹<%= order.grandTotal.toFixed(2) %></span>
                  </div>
                </div>
              </div>
            </div>

            <!-- Order Actions -->
            <div class="mt-4 flex justify-end space-x-4">
              <% if (order.status === 'pending') { %>
                <button onclick="cancelOrder('<%= order._id %>')"
                        class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700">
                  Cancel Order
                </button>
              <% } %>
              
              <!-- Add this section for payment pending orders -->
              <% if (order.status === 'paymentpending') { %>
                <button onclick="retryPayment('<%= order._id %>', <%= order.grandTotal %>)"
                        class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700">
                  Retry Payment
                </button>
                <button onclick="abortOrder('<%= order._id %>')"
                        class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700">
                  Abort Order
                </button>
              <% } %>

              <% if (order.status === 'completed') { %>
                <a href="/orders/<%= order._id %>/invoice" 
                   class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700">
                  Download Invoice
                </a>
              <% } %>
            </div>
          </div>
        <% }); %>
      </div>

      <!-- Pagination -->
      <% if (totalPages > 1) { %>
        <div class="flex justify-center mt-8 space-x-2">
          <% for(let i = 1; i <= totalPages; i++) { %>
            <a href="/orders?page=<%= i %>" 
               class="px-4 py-2 rounded <%= currentPage == i ? 'bg-[#bca374] text-white' : 'bg-gray-200 text-gray-700' %>">
              <%= i %>
            </a>
          <% } %>
        </div>
      <% } %>
    <% } else { %>
      <div class="text-center py-12">
        <div class="text-gray-400 text-6xl mb-4">
          <i class="fas fa-shopping-bag"></i>
        </div>
        <h2 class="text-2xl font-medium text-gray-600 mb-4">No orders yet</h2>
        <a href="/" class="inline-block px-6 py-3 bg-[#bca374] text-white rounded-lg hover:bg-[#a38d64]">
          Start Shopping
        </a>
      </div>
    <% } %>
  </main>

  <%- include('../layouts/footer.ejs', { fullName: fullName }) %>

  <div id="confirmModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 max-w-sm mx-4 relative">
      <button onclick="closeModal()" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700">
        <i class="fas fa-times"></i>
      </button>
      <h3 class="text-lg font-semibold mb-4" id="modalTitle"></h3>
      <p class="text-gray-600 mb-6" id="modalMessage"></p>
      <div class="flex justify-end space-x-3">
        <button onclick="closeModal()" 
                class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">
          Cancel
        </button>
        <button id="confirmButton"
                class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700">
          Confirm
        </button>
      </div>
    </div>
  </div>

  <script>
    function showModal(title, message, confirmCallback) {
      document.getElementById('modalTitle').textContent = title;
      document.getElementById('modalMessage').textContent = message;
      document.getElementById('confirmButton').onclick = confirmCallback;
      document.getElementById('confirmModal').style.display = 'flex';
    }

    function closeModal() {
      document.getElementById('confirmModal').style.display = 'none';
    }

    function cancelOrder(orderId) {
      showModal(
        'Cancel Order',
        'Are you sure you want to cancel this order?',
        () => {
          fetch(`/orders/cancel/${orderId}`, { method: 'POST' })
            .then(response => {
              if (response.ok) {
                window.location.reload();
              } else {
                alert('Failed to cancel order');
              }
            });
        }
      );
    }

    function cancelProduct(orderId, productId) {
      showModal(
        'Cancel Product',
        'Are you sure you want to cancel this product?',
        () => {
          fetch(`/orders/cancel-product/${orderId}/${productId}`, { method: 'POST' })
            .then(response => {
              if (response.ok) {
                window.location.reload();
              } else {
                alert('Failed to cancel product');
              }
            });
        }
      );
    }

    function returnProduct(orderId, productId) {
      showModal(
        'Return Product',
        'Are you sure you want to return this product?',
        () => {
          fetch(`/orders/return-product/${orderId}/${productId}`, { method: 'POST' })
            .then(response => {
              if (response.ok) {
                window.location.reload();
              } else {
                alert('Failed to request return');
              }
            });
        }
      );
    }

    // Add these functions to handle retry payment and abort order
    function retryPayment(orderId, amount) {
      showModal(
        'Retry Payment',
        'Would you like to retry payment for this order?',
        async () => {
          try {
            const response = await fetch('/repayment/process', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ orderId, amount })
            });

            const data = await response.json();
            
            if (data.success) {
              const options = {
                key: '<%= RAZORPAY_KEY_ID %>',
                amount: data.amount,
                currency: data.currency,
                name: '4WATCHES',
                description: 'Order Payment',
                order_id: data.orderId,
                handler: function(response) {
                  fetch('/repayment/success', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                      orderId,
                      paymentId: response.razorpay_payment_id 
                    })
                  })
                  .then(res => {
                    if (res.ok) {
                      window.location.reload();
                    }
                  });
                },
                prefill: {
                  name: '<%= fullName %>',
                },
                theme: {
                  color: '#bca374'
                }
              };

              const rzp = new Razorpay(options);
              rzp.open();

            } else {
              throw new Error(data.message || 'Failed to create payment');
            }
          } catch (error) {
            console.error('Payment retry error:', error);
            alert('Failed to process payment. Please try again.');
          }
        }
      );
    }

    function abortOrder(orderId) {
      showModal(
        'Abort Order',
        'Are you sure you want to abort this order? This cannot be undone.',
        () => {
          fetch(`/orderAbort/${orderId}`, {
            method: 'POST'
          })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            } else {
              alert('Failed to abort order');
            }
          })
          .catch(error => {
            console.error('Error aborting order:', error);
            alert('Failed to abort order');
          });
        }
      );
    }
  </script>

  <!-- Make sure to include Razorpay SDK -->
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</body>

</html>